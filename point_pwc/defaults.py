from yacs.config import CfgNode as CN

_C = CN()

_C.BASE_DIRECTORY = "results/"
_C.EXPERIMENT_NAME = ""
_C.NUM_WORKERS = 8
_C.DEVICE = 'cuda'
_C.USE_AMP = True

_C.MODEL = CN()
_C.MODEL.PPWC_SFPC_BN = False

_C.SOLVER = CN()
_C.SOLVER.LEARNING_RATE = 0.001
_C.SOLVER.NUM_EPOCHS = 100
_C.SOLVER.SCHEDULER = 'multistep'
_C.SOLVER.LR_MILESTONES = []
_C.SOLVER.LR_LAMBDA = 0.1
_C.SOLVER.BATCH_SIZE = 8
_C.SOLVER.CHECKPOINT_INTERVAL = 20
_C.SOLVER.LOSS_FACTOR = 10.


_C.INPUT = CN()
_C.INPUT.SCALE_NORM_FACTOR = 100


_C.AUGMENTATIONS = CN()
_C.AUGMENTATIONS.METHOD = ''
_C.AUGMENTATIONS.MAX_ROTATION_ANGLE = 0.
_C.AUGMENTATIONS.MAX_SCALE_OFFSET = 0.
_C.AUGMENTATIONS.MAX_TRANSLATION = 0.
_C.AUGMENTATIONS.NUM_CONTROL_POINTS_LOCAL = 500
_C.AUGMENTATIONS.MAX_CONTROL_SHIFT_LOCAL = 0.03
_C.AUGMENTATIONS.KERNEL_STD_LOCAL = 0.08
_C.AUGMENTATIONS.GLOBAL_GRID_SPACING = 0.9
_C.AUGMENTATIONS.MAX_CONTROL_SHIFT_GLOBAL = 0.25
_C.AUGMENTATIONS.KERNEL_STD_GLOBAL = 0.25


def get_cfg_defaults():
    return _C.clone()